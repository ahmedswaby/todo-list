{"version":3,"sources":["checkbox.jsx","newItem.jsx","todoApi.js","context.jsx","filterByDate.jsx","header.jsx","isOverdue.js","item.jsx","list.jsx","App.jsx","index.jsx"],"names":["ItemSelect","label","selected","select","unSelect","disabled","className","type","checked","onChange","defaultProps","NewItem","add","cancel","useState","name","setName","dateformat","Date","date","setDate","htmlFor","placeholder","id","value","e","target","onClick","dueDate","timestampDue","getTime","complete","style","marginLeft","storageKey","delayMs","getFromStorage","fromStorage","localStorage","getItem","JSON","parse","get","Promise","resolve","setTimeout","updatedItems","map","item","setItem","stringify","inComplete","console","log","items","newId","reduce","context","createContext","AppProvider","children","setItems","a","todoApi","Provider","useGlobalContext","useContext","FilterByDate","filter","data","Format","startDate","setStartDate","Enddate","setEndDate","sDate","EDate","Header","addItem","setFilter","addfilterByDate","adding","setAdding","filterByDate","setFilterByDate","flexDirection","display","alignItems","overdueOnly","includeComplete","EndDate","Item","completeItem","inCompleteItem","itemClass","isOverdue","List","length","role","defaultFilter","App","React","loading","setLoading","loadItems","todoItems","useEffect","filteredItems","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e938a281.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n// checkbox component to handle checked & unckecked functions\nfunction ItemSelect({ label, selected, select, unSelect, disabled }) {\n    const changeSelected = () => {\n        if (selected) {\n            unSelect();\n        } else {\n            select();\n        }\n    };\n\n    return (\n        <label className=\"checkbox-field\">\n            <input type=\"checkbox\" checked={selected} onChange={changeSelected} disabled={disabled} />\n            <span className={disabled ? \"checkmark disabled\" : \"checkmark\"} />\n            {label && <span className=\"label-text\">{label}</span>}\n        </label>\n    );\n}\n\nItemSelect.propTypes = {\n    label: PropTypes.string,\n    selected: PropTypes.bool,\n    select: PropTypes.func.isRequired,\n    unSelect: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n};\n\nItemSelect.defaultProps = {\n    label: null,\n    selected: false,\n    disabled: false,\n};\n\nexport default ItemSelect;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\n\nfunction NewItem({ add, cancel }) {\n    const [name, setName] = useState(\"\");\n    const [date, setDate] = useState(dateformat(new Date(), \"yyyy-mm-dd\"));\n\n    const addItem = () => {\n        const dueDate = new Date(date);\n        add({ name, timestampDue: dueDate.getTime(), complete: false, id: 0 });\n    };\n    return (\n        <div className=\"add-item-form\">\n            <div className=\"form-group\">\n                <label htmlFor=\"addItemInput\">Item description</label>\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter description...\"\n                    className=\"form-control\"\n                    id=\"addItemInput\"\n                    value={name}\n                    onChange={e => setName(e.target.value)}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"addItemDueInput\">Due date</label>\n                <input\n                    type=\"date\"\n                    className=\"form-control\"\n                    id=\"addItemDueInput\"\n                    onChange={e => setDate(e.target.value)}\n                    value={date}\n                />\n            </div>\n            <button className=\"btn btn-success\" disabled={name === \"\"} onClick={addItem}>\n                Add item\n            </button>\n            <button className=\"btn btn-secondary\" style={{ marginLeft: \"20px\" }} onClick={cancel}>\n                Cancel\n            </button>\n        </div>\n    );\n}\n\nNewItem.propTypes = {\n    add: PropTypes.func.isRequired,\n    cancel: PropTypes.func.isRequired,\n};\n\nexport default NewItem;\n","const storageKey = \"TODO_LIST\";\nconst delayMs = 1000;\n\nfunction getFromStorage() {\n    const fromStorage = localStorage.getItem(storageKey);\n    return fromStorage ? JSON.parse(fromStorage) : [];\n}\n\nfunction get() {\n    return new Promise(resolve => {\n        setTimeout(() => resolve(getFromStorage()), delayMs);\n    });\n}\n\nfunction complete(id) {\n    return new Promise(resolve => {\n        const items = getFromStorage();\n        const updatedItems = items.map(item => (item.id === id ? { ...item, complete: true } : item));\n        localStorage.setItem(storageKey, JSON.stringify(updatedItems));\n        setTimeout(() => resolve(updatedItems), delayMs);\n    });\n}\nfunction inComplete(id) {\n    console.log(id);\n    return new Promise(resolve => {\n        const items = getFromStorage();\n        items.map(item => {\n            return item.id === id ? (item.complete = false) : false;\n        });\n        localStorage.setItem(storageKey, JSON.stringify(items));\n        setTimeout(() => resolve(items), delayMs);\n    });\n}\n\nfunction add(item) {\n    return new Promise(resolve => {\n        const items = getFromStorage();\n        const newId = items.reduce((id, item) => (item.id >= id ? item.id + 1 : id), 1);\n        const updatedItems = [...items, { ...item, id: newId }];\n        localStorage.setItem(storageKey, JSON.stringify(updatedItems));\n        setTimeout(() => resolve(updatedItems), delayMs);\n    });\n}\n\nexport default { get, complete, inComplete, add };\n","import React, { createContext, useContext, useState } from 'react'\nimport todoApi from \"./todoApi\";\n\nconst context = createContext()\n\n\n\nconst AppProvider = ({children}) => {\n    const [items, setItems] = useState([]);\n\n    // when complete a task\n    const complete = async id => {\n        console.log(id);\n        const updatedItems = await todoApi.complete(id);\n        setItems(updatedItems);\n    };\n\n    \n    return <context.Provider value={{ complete }}>\n        {children}\n    </context.Provider>\n}\n\n// setup custom hooks\n\nconst useGlobalContext = () => {\n    return useContext(context)\n}\n\nexport { AppProvider, context, useGlobalContext}","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\nimport { useGlobalContext } from './context';\n\nfunction FilterByDate({ filter, cancel }) {\n    const data = useGlobalContext()\n    console.log(data);\n    const Format = dateformat(new Date(), \"yyyy-mm-dd\")\n    const [startDate, setStartDate] = useState(Format);\n    const [Enddate, setEndDate] = useState(Format);\n\n    const FilterItems = () => {\n        // filter function \n        const sDate = new Date(startDate).getTime()\n        const EDate = new Date(Enddate).getTime()\n        filter(sDate, EDate)\n        cancel()\n    };\n    return (\n        <div className=\"add-item-form\">\n            <div className=\"form-group\">\n                <label htmlFor=\"startDate\">Start Date</label>\n                <input\n                    type=\"date\"\n                    className=\"form-control\"\n                    id=\"startDate\"\n                    onChange={e => setStartDate(e.target.value)}\n                    value={startDate}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"endDate\">End Date</label>\n                <input\n                    type=\"date\"\n                    className=\"form-control\"\n                    id=\"endDate\"\n                    onChange={e => setEndDate(e.target.value)}\n                    value={Enddate}\n                />\n            </div>\n            <button className=\"btn btn-success\" onClick={FilterItems} disabled={startDate === '' && Enddate === ''}>\n                filter\n            </button>\n            <button className=\"btn btn-secondary\" style={{ marginLeft: \"20px\" }} onClick={cancel}>\n                Cancel\n            </button>\n        </div>\n    );\n}\n\nFilterByDate.propTypes = {\n    filter: PropTypes.func.isRequired,\n    cancel: PropTypes.func.isRequired,\n};\n\nexport default FilterByDate;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Checkbox from \"./checkbox\";\nimport NewItem from \"./newItem\";\nimport FilterByDate from \"./filterByDate\";\n\nfunction Header({ filter, addItem, setFilter, addfilterByDate }) {\n    const [adding, setAdding] = useState(false);\n    const [filterByDate, setFilterByDate] = useState(false);\n\n    // for checkbox select & unselect overdue items\n    const selectOverdueFilter = () => setFilter({ ...filter, overdueOnly: true });\n    const unSelectOverdueFilter = () => setFilter({ ...filter, overdueOnly: false });\n    // for checkbox select & unselect compeleted items\n    const selectCompleteFilter = () => setFilter({ ...filter, includeComplete: true });\n    const unSelectCompleteFilter = () => setFilter({ ...filter, includeComplete: false });\n    // add New Items\n    const addNewItem = item => {\n        console.log(item);\n        setAdding(false);\n        addItem(item);\n    };\n    const filterItems = (startDate, EndDate)  => {\n        addfilterByDate(startDate, EndDate)\n    };\n\n    return (\n        <header>\n            <nav className=\"navbar navbar-light bg-light\">\n                <span className=\"navbar-brand\">Todo list</span>\n                <div style={{ flexDirection: \"inherit\", display: \"flex\", alignItems: \"center\" }}>\n                    {!adding && (\n                        <button type=\"button\" className=\"btn btn-link\" onClick={() => {\n                            setAdding(true)\n                            setFilterByDate(false)\n                        }}>\n                            Add new item\n                        </button>\n                    )}\n                    {!filterByDate && (\n                        <button type=\"button\" className=\"btn btn-link\" onClick={() => {\n                            setAdding(false)\n                            setFilterByDate(true)\n                        }}>\n                            Filter By Date\n                        </button>\n                    )}\n                    <Checkbox\n                        label=\"today & overdue items only\"\n                        selected={filter.overdueOnly}\n                        select={selectOverdueFilter}\n                        unSelect={unSelectOverdueFilter}\n                    />\n                    <Checkbox\n                        label=\"Include complete items\"\n                        selected={filter.includeComplete}\n                        select={selectCompleteFilter}\n                        unSelect={unSelectCompleteFilter}\n                    />\n                </div>\n            </nav>\n            {adding && <NewItem cancel={() => setAdding(false)} add={addNewItem} />}\n            {filterByDate && <FilterByDate cancel={() => setFilterByDate(false)} filter={filterItems} />}\n        </header>\n    );\n}\n\nHeader.propTypes = {\n    addItem: PropTypes.func.isRequired,\n    addfilterByDate: PropTypes.func.isRequired,\n    filter: PropTypes.object.isRequired,\n    setFilter: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","export default item => !item.complete && item.timestampDue < new Date().getTime();\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\nimport isOverdue from \"./isOverdue\";\nimport Checkbox from \"./checkbox\";\nimport { useGlobalContext } from './context';\n\nfunction Item({ item, completeItem, inCompleteItem }) {\n    const data = useGlobalContext()\n    console.log(data);\n    const itemClass = `list-group-item list-group-item-${isOverdue(item) ? \"danger\" : \"info\"}`;\n    return (\n        <li className={itemClass}>\n            <div className=\"item\">\n                <span className={`item-title${item.complete ? \" complete-item\" : \"\"}`}>\n                    <i className={isOverdue(item) ? \"fas fa-exclamation-circle\" : \"\"} />\n                    {`${item.name} - ${dateformat(new Date(item.timestampDue), \"dd-mmm-yyyy\")}`}\n                </span>\n                <Checkbox\n                    label=\"Complete item\"\n                    selected={item.complete}\n                    select={completeItem}\n                    unSelect={inCompleteItem}\n                />\n            </div>\n        </li>\n    );\n}\n\nItem.propTypes = {\n    item: PropTypes.object.isRequired,\n    completeItem: PropTypes.func.isRequired,\n    inCompleteItem: PropTypes.func.isRequired,\n};\n\nexport default Item;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Item from \"./item\";\n\nfunction List({ items, completeItem, inCompleteItem }) {\n    if (items.length === 0) {\n        return (\n            <div className=\"alert alert-success\" role=\"alert\">\n                Congratulations your todo list is empty!\n            </div>\n        );\n    }\n    return (\n        <ul className=\"list-group\">\n            {items.map(item => (\n                <Item key={item.id} item={item} completeItem={() => completeItem(item.id)} inCompleteItem={() => inCompleteItem(item.id)}/>\n            ))}\n        </ul>\n    );\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired,\n    completeItem: PropTypes.func.isRequired,\n    inCompleteItem: PropTypes.func.isRequired\n};\n\nexport default List;\n","import React, { useEffect } from \"react\";\nimport Header from \"./header\";\nimport List from \"./list\";\nimport \"./App.scss\";\nimport isOverdue from \"./isOverdue\";\nimport todoApi from \"./todoApi\";\nimport { AppProvider } from './context';\nconst defaultFilter = { overdueOnly: true, includeComplete: false };\n\n// const context = React.createContext()\n\nfunction App() {\n    const [items, setItems] = React.useState([]);\n    const [filter, setFilter] = React.useState(defaultFilter);\n    const [loading, setLoading] = React.useState(true);\n\n    const loadItems = async () => {\n        setLoading(true);\n        const todoItems = await todoApi.get();\n        setItems(todoItems);\n        setLoading(false);\n    };\n\n    useEffect(() => {\n        loadItems();\n    }, []);\n    // when complete a task\n    const complete = async id => {\n        const updatedItems = await todoApi.complete(id);\n        setItems(updatedItems);\n    };\n    // when incomplete a task\n    const inComplete = async id => {\n        const updatedItems = await todoApi.inComplete(id);\n        setItems(updatedItems);\n    };\n    // Add new item\n    const add = async item => {\n        const updatedItems = await todoApi.add(item);\n        setItems(updatedItems);\n    };\n    // filter by specific date\n    const filterByDate = async (startDate, EndDate) => {\n        setLoading(true);\n        const todoItems = await todoApi.get();\n        setItems(todoItems)\n        const updatedItems = todoItems.filter(\n            item => startDate <= item.timestampDue && EndDate >= item.timestampDue\n        )\n        updatedItems.length > 0 ? setItems(updatedItems) : setItems(todoItems)\n        setLoading(false);\n    };\n\n\n    // func to return items also works when check overdue items only\n    const filteredItems = items.filter(\n        item => (filter.includeComplete || !item.complete) && (!filter.overdueOnly || isOverdue(item)),\n    );\n\n\n    return (\n        <AppProvider>\n            <div className=\"fluid-container app-container\">\n                <Header addItem={add} filter={filter} setFilter={setFilter} addfilterByDate={filterByDate} />\n                {!loading && (\n                    <div className=\"list\">\n                        <List items={filteredItems} completeItem={complete} inCompleteItem={inComplete} />\n                    </div>\n                )}\n                {loading && (\n                    <div className=\"alert alert-info\" role=\"alert\">\n                        Loading please wait...\n                    </div>\n                )}\n            </div>\n        </AppProvider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}